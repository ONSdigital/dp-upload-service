// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"context"
	"github.com/ONSdigital/dp-healthcheck/healthcheck"
	"github.com/ONSdigital/dp-upload-service/api"
	"sync"
)

// Ensure, that VaultClienterMock does implement api.VaultClienter.
// If this is not the case, regenerate this file with moq.
var _ api.VaultClienter = &VaultClienterMock{}

// VaultClienterMock is a mock implementation of api.VaultClienter.
//
//     func TestSomethingThatUsesVaultClienter(t *testing.T) {
//
//         // make and configure a mocked api.VaultClienter
//         mockedVaultClienter := &VaultClienterMock{
//             CheckerFunc: func(ctx context.Context, state *healthcheck.CheckState) error {
// 	               panic("mock out the Checker method")
//             },
//         }
//
//         // use mockedVaultClienter in code that requires api.VaultClienter
//         // and then make assertions.
//
//     }
type VaultClienterMock struct {
	// CheckerFunc mocks the Checker method.
	CheckerFunc func(ctx context.Context, state *healthcheck.CheckState) error

	// calls tracks calls to the methods.
	calls struct {
		// Checker holds details about calls to the Checker method.
		Checker []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// State is the state argument value.
			State *healthcheck.CheckState
		}
	}
	lockChecker sync.RWMutex
}

// Checker calls CheckerFunc.
func (mock *VaultClienterMock) Checker(ctx context.Context, state *healthcheck.CheckState) error {
	if mock.CheckerFunc == nil {
		panic("VaultClienterMock.CheckerFunc: method is nil but VaultClienter.Checker was just called")
	}
	callInfo := struct {
		Ctx   context.Context
		State *healthcheck.CheckState
	}{
		Ctx:   ctx,
		State: state,
	}
	mock.lockChecker.Lock()
	mock.calls.Checker = append(mock.calls.Checker, callInfo)
	mock.lockChecker.Unlock()
	return mock.CheckerFunc(ctx, state)
}

// CheckerCalls gets all the calls that were made to Checker.
// Check the length with:
//     len(mockedVaultClienter.CheckerCalls())
func (mock *VaultClienterMock) CheckerCalls() []struct {
	Ctx   context.Context
	State *healthcheck.CheckState
} {
	var calls []struct {
		Ctx   context.Context
		State *healthcheck.CheckState
	}
	mock.lockChecker.RLock()
	calls = mock.calls.Checker
	mock.lockChecker.RUnlock()
	return calls
}
