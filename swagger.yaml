swagger: "2.0"
info:
  title: "dp-upload-service"
  description: "Digital Publishing resumable file upload service that handles writing to S3. It updates images through the CMS."
  version: 1.0.0
  license:
    name: "Open Government Licence v3.0"
    url: "http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"

schemes:
  - http

host: localhost:25100

tags:
  - name: "private"

paths:
  /upload-new:
    post:
      tags:
         - Upload file and provide metadata
      summary: POST's form with file to be uploaded and metadata
      consumes:
         - multipart/form-data
      parameters:
        - name: resumableFilename
          type: string
          in: formData
          description: The name of the file being stored. Note that this will be part of the AWS S3 object name so should adhere to the S3 object naming guidelines https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#:~:text=and%20AWS%20SDKs.-,Object%20key%20naming%20guidelines,-You%20can%20use
          required: true
        - name: path
          type: string
          in: formData
          description: The path to the file being stored. Note that this will be part of the AWS S3 bucket name so should adhere to the S3 bucket naming rules https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html
          required: true
        - name: isPublishable
          type: boolean
          in: formData
          required: true
        - name: collectionId
          type: string
          in: formData
          description: optional for upload, required before publishing
        - name: title
          type: string
          in: formData
        - name: resumableTotalSize
          type: integer
          in: formData
          description: this is the size in bytes of the file being uploaded.
          required: true
        - name: resumableType
          type: string
          in: formData
          desciption: the mime type of the file being uploaded - used when being downloaded
          required: true
        - name: licence
          type: string
          in: formData
          required: true
        - name: licenceUrl
          type: string
          in: formData
          required: true
        - name: resumableChunkNumber
          type: integer
          in: formData
          required: true
        - name: resumableTotalChunks
          type: integer
          in: formData
          description: this needs to be calculated - it is the files size in bytes, divided by 5MiB (5*1024*1024), 10,000 max.
          required: true
        - name: file
          type: string
          in: formData
          format: binary
          description: actual raw, binary file content for the chunk being uploaded. No character or text conversion is made.
          required: true
      produces:
         - application/json
      responses:
        200:
          description: Continue sending file chucks
        201:
          description: Upload complete and file registered
        400:
          $ref: '#/responses/JsonErrors'
        404:
          $ref: '#/responses/JsonErrors'
        500:
          $ref: '#/responses/InternalError'

responses:
  InternalError:
    description: "Failed to process the request due to an internal error"
  JsonErrors:
    description: "Common error response format"
    schema:
      $ref: "#/definitions/Error"

definitions:
    Error:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                example: BadJson
              description:
                type: string
                example: The JSON is not in a valid format
